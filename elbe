#!/usr/bin/env python3
#
# ELBE - Debian Based Embedded Rootfilesystem Builder
# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-FileCopyrightText: 2013-2017 Linutronix GmbH

import sys

# We need to import elbepack.commands so that
# elbepack/commands/__init__.py is run and the commands package is
# register into the elbepack namespace.  This is later use by
# get_cmd_list() and the magic stuff with __import__() at the end of
# this file
#
# pylint: disable=unused-import
import elbepack.commands

from elbepack.version import elbe_version
from elbepack.directories import init_directories, get_cmdlist


def usage():
    print("elbe v%s" % elbe_version)
    print("need a subcommand: e.g. \'elbe initvm\'. \n\
    Available subcommands are: \n")
    for i in get_cmdlist():
        print("        * %s" % i)

# First initialise the directories module
# so that it knows, where the current elbe
# executable can be found.


init_directories(__file__)

if len(sys.argv) < 2:
    usage()
    sys.exit(20)

if sys.argv[1] == "--version":
    print("elbe v%s" % (elbe_version))
    sys.exit(0)

cmd_list = get_cmdlist()

if not sys.argv[1] in cmd_list:
    print("Unknown subcommand !\n")
    usage()
    sys.exit(20)

modname = "elbepack.commands." + sys.argv[1]

mod = __import__(modname)
cmdmod = sys.modules[modname]

cmdmod.run_command(sys.argv[2:])
